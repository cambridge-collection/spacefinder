version: '3.6'

services:
  web:
    image: ${SPACEFINDER_WEB_IMAGE:-spacefinder:local}
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - app_data:/home/app/webapp/public/system
    ports:
      - 3000:80
    depends_on:
      - db
    environment:
      SPACEFINDER_SECRET_KEY: ${SECRET_KEY_BASE:-placeholder}
      SPACEFINDER_DATABASE_HOST: db
      SPACEFINDER_DATABASE_NAME: &SPACEFINDER_DATABASE_NAME spacefinder
      SPACEFINDER_DATABASE_USER: &SPACEFINDER_DATABASE_USER spacefinder
      SPACEFINDER_DATABASE_PASSWORD: &SPACEFINDER_DATABASE_PASSWORD ${SPACEFINDER_DATABASE_PASSWORD:-spacefinder}
      SPACEFINDER_SAML_CERTIFICATE: |
        -----BEGIN CERTIFICATE-----
        mock
        -----END CERTIFICATE-----
      SPACEFINDER_SAML_PRIVATE_KEY: |
        -----BEGIN PRIVATE KEY-----
        mock
        -----END PRIVATE KEY-----
      SPACEFINDER_SAML_ISSUER: mock-value.example.com
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: *SPACEFINDER_DATABASE_USER
      POSTGRES_PASSWORD: *SPACEFINDER_DATABASE_PASSWORD
      # The app creates the database itself and initial db setup is only
      # performed if the db doesn't exist. So the postgres container must not
      # create it itself.
      POSTGRES_DB: postgres

volumes:
  app_data:
  postgres_data:
